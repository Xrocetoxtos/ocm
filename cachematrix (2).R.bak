## makes the matrix
makeCacheMatrix <- function(x = matrix()) {
		#initializes the data
        m <- NULL
        set <- function(y) {
                x <<- y
                m <<- NULL
        }
        get <- function() x
		#it'll understand what to solve, namely M
        setsolve <- function(solve) m <<- solve
        getsolve <- function() m
		#writes the solve stuff in a list for further reference
        list(set = set, get = get,
             setsolve = setsolve,
             getsolve = getsolve)
}

cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
		#checks if getsolve has already been cached 
        m <- x$getsolve()
        if(!is.null(m)) {
				#if it has, retrieve it from the cache
                message("getting cached data")
				#return the cached result
                return(m)
        }
		#if it hasn't, calculate it by using the get-function defined
		#in makeCacheMatrix
        data <- x$get()
        m <- solve(data, ...)
		#...and store the result for caching
		x$setsolve(m)
		#return the result
        m
}